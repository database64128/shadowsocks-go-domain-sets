name: Generate

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  generate:
    name: Generate domain sets
    runs-on: ubuntu-latest
    env:
      GOAMD64: v3

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Pull from v2fly/dlc
        run: |
          cd ../
          git clone https://github.com/v2fly/domain-list-community.git --verbose --depth 1
          cd domain-list-community/
          go run . -exportlists 'category-ads-all,private,cn,geolocation-!cn,bing,digitalocean,google,netflix,ookla-speedtest,spotify,telegram,vultr'

      - name: Convert to domain sets
        run: |
          mkdir release
          find ../domain-list-community/ -type f -name '*.txt' -print0 | \
          xargs -r0 -I '{}' basename '{}' .txt | \
          sed '/geolocation-!cn/d' | \
          xargs -I '{}' go run github.com/database64128/shadowsocks-go/cmd/shadowsocks-go-domain-set-converter@latest \
            -inDlc '../domain-list-community/{}.txt' \
            -outText 'release/ss-go-{}.txt' \
            -outGob 'release/ss-go-gob-{}'
            
          go run github.com/database64128/shadowsocks-go/cmd/shadowsocks-go-domain-set-converter@latest \
            -inDlc '../domain-list-community/geolocation-!cn.txt' \
            -outText 'release/ss-go-geolocation-!cn@cn.txt' \
            -outGob 'release/ss-go-gob-geolocation-!cn@cn' \
            -tag cn

      - name: Deploy to release branch
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: release
          build_dir: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
